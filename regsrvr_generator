$instances = @(
    "localhost",
    "ProdServer01",
    "DEV-SQL",
    "prodserver01"
)

# Remove duplicates (case-insensitive)
$distinctInstances = $instances | Sort-Object -Unique -CaseSensitive:$false

$namespace = 'http://www.microsoft.com/sqlserver/RegisteredServers/2007/08'

# Create XML document
$xml = New-Object System.Xml.XmlDocument
$root = $xml.CreateElement("RegisteredServers", $namespace)
$xml.AppendChild($root)

$serverType = $xml.CreateElement("ServerType", $namespace)
$root.AppendChild($serverType)

$serverTypeID = $xml.CreateElement("ServerTypeID", $namespace)
$serverTypeID.InnerText = "0"
$serverType.AppendChild($serverTypeID)

$serverTypeName = $xml.CreateElement("ServerTypeName", $namespace)
$serverTypeName.InnerText = "Database Engine"
$serverType.AppendChild($serverTypeName)

$serverGroups = $xml.CreateElement("ServerGroups", $namespace)
$serverType.AppendChild($serverGroups)

$group = $xml.CreateElement("ServerGroup", $namespace)
$serverGroups.AppendChild($group)

$name = $xml.CreateElement("Name", $namespace)
$name.InnerText = "PowerShell Registered Servers"
$group.AppendChild($name)

$desc = $xml.CreateElement("Description", $namespace)
$desc.InnerText = "Generated with PowerShell"
$group.AppendChild($desc)

$regServers = $xml.CreateElement("RegisteredServers", $namespace)
$group.AppendChild($regServers)

foreach ($instance in $distinctInstances) {
    $regServer = $xml.CreateElement("RegisteredServer", $namespace)

    $regName = $xml.CreateElement("Name", $namespace)
    $regName.InnerText = $instance
    $regServer.AppendChild($regName)

    $serverName = $xml.CreateElement("ServerName", $namespace)
    $serverName.InnerText = $instance
    $regServer.AppendChild($serverName)

    $descNode = $xml.CreateElement("Description", $namespace)
    $descNode.InnerText = "Added by PowerShell"
    $regServer.AppendChild($descNode)

    $useColor = $xml.CreateElement("UseCustomConnectionColor", $namespace)
    $useColor.InnerText = "False"
    $regServer.AppendChild($useColor)

    $connInfo = $xml.CreateElement("ConnectionInformation", $namespace)

    $connServerName = $xml.CreateElement("ServerName", $namespace)
    $connServerName.InnerText = $instance
    $connInfo.AppendChild($connServerName)

    $authType = $xml.CreateElement("AuthenticationType", $namespace)
    $authType.InnerText = "0"
    $connInfo.AppendChild($authType)

    $encrypt = $xml.CreateElement("EncryptConnection", $namespace)
    $encrypt.InnerText = "True"
    $connInfo.AppendChild($encrypt)

    $trustCert = $xml.CreateElement("TrustServerCertificate", $namespace)
    $trustCert.InnerText = "True"
    $connInfo.AppendChild($trustCert)

    $regServer.AppendChild($connInfo)
    $regServers.AppendChild($regServer)
}

# Save properly encoded file
$outputFile = "$env:USERPROFILE\Desktop\RegisteredServers.regsrvr"
$utf8NoBom = New-Object System.Text.UTF8Encoding($false)
$writer = New-Object System.IO.StreamWriter($outputFile, $false, $utf8NoBom)
$xml.Save($writer)
$writer.Close()

Write-Host "`nâœ… File saved to: $outputFile"
